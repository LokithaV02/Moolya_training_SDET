{
	"info": {
		"_postman_id": "b3509c7b-21ba-4195-aea7-ebccfaf4397e",
		"name": "GitRepo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30678699"
	},
	"item": [
		{
			"name": "CreateRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"gitreponame= pm.response.json().name\r",
							"pm.globals.set(\"gitreponame\", gitreponame);\r",
							"\r",
							"pm.test(\"Validate if the order is created successfully\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "{{gitbearertoken}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"testgitnew{{$randomInt}}\",\r\n  \"description\":\"This is my first repository\",\r\n  \"homepage\":\"https://github.com\",\r\n  \"private\":false,\r\n  \"auto_init\": true,\r\n  \"has_issues\":true,\r\n  \"has_projects\":true,\r\n  \"has_wiki\":true\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{giturl}}/orgs/{{Orggitowner}}/repos",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"orgs",
						"{{Orggitowner}}",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Updaterepo",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "{{gitbearertoken}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Onlinetest0213\",\r\n  \"description\":\"This is my updated git repository\",\r\n  \"homepage\":\"https://github.com\",\r\n  \"private\":false,\r\n  \"has_issues\":true,\r\n  \"has_projects\":true,\r\n  \"has_wiki\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Getrepository",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"gitrepoupdatename= pm.response.json().name\r",
							"pm.globals.set(\"gitrepoupdatename\", gitrepoupdatename);\r",
							"\r",
							"pm.test(\"Validate the customername is updated successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"gitid= pm.response.json().id\r",
							"pm.globals.set(\"gitid\", gitid);\r",
							"console.log(gitid)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{gitbearertoken}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deleterepo",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{gitbearertoken}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "createfork",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "client_authentication",
							"value": "header",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "a19b548e592a66801d92",
							"type": "string"
						},
						{
							"key": "clientSecret",
							"value": "b3d0936c9cff026c80a1ab5380396a0eb08fb217",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "string"
						},
						{
							"key": "tokenName",
							"value": "GitOauthtoken",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.github+json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"organization\":\"Testpostmangit\",\r\n    \"name\":\"forkcreate1{{$randomInt}}\",\r\n    \"default_branch_only\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/forks",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"forks"
					]
				}
			},
			"response": []
		},
		{
			"name": "listforks",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{gitbearertoken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/forks",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"forks"
					]
				}
			},
			"response": []
		},
		{
			"name": "listrepos",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{gitbearertoken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{giturl}}/users/{{Orggitowner}}/repos",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"users",
						"{{Orggitowner}}",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "lisrepolang",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{gitbearertoken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/languages",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"languages"
					]
				}
			},
			"response": []
		},
		{
			"name": "listpublicrepos",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "{{gitbearertoken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{giturl}}/repositories",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repositories"
					]
				}
			},
			"response": []
		},
		{
			"name": "createfilecontent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"shavalue = pm.response.json().content.sha\r",
							"console.log(shavalue)\r",
							"pm.globals.set(\"shavalue\",shavalue)\r",
							"\r",
							"filename = pm.response.json().content.name\r",
							"console.log(filename)\r",
							"pm.globals.set(\"filename\",filename)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{gitbearertoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\":\"commit message\",\r\n    \"committer\":{\"name\":\"testOctocat1{{$randomInt}}\",\"email\":\"octocattest@github.com\"},\r\n    \"content\":\"bXkgbmV3IGZpbGUgY29udGVudHM=\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/contents/test{{$randomInt}}.txt",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"contents",
						"test{{$randomInt}}.txt"
					]
				}
			},
			"response": []
		},
		{
			"name": "updatefilecontent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"shavalue_updated = pm.response.json().content.sha\r",
							"console.log(shavalue_updated)\r",
							"pm.globals.set(\"shavalue_updated\",shavalue_updated)\r",
							"\r",
							"filename_updated = pm.response.json().content.name\r",
							"console.log(filename_updated)\r",
							"pm.globals.set(\"filename_updated\",filename_updated)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{gitbearertoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\":\"updated new commit message via api\",\r\n    \"committer\":{\"name\":\"testOctocat0629{{$randomInt}}\",\"email\":\"octocattest@github.com\"},\r\n    \"content\":\"bXkgdXBkYXRlZCBmaWxlIGNvbnRlbnRz\",\r\n    \"sha\":\"{{shavalue}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/contents/{{filename}}",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"contents",
						"{{filename}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getfilecontent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"shainjson= pm.response.json().sha\r",
							"pm.globals.set(\"shainjson\", shainjson);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/contents/filenew1.txt",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"contents",
						"filenew1.txt"
					]
				}
			},
			"response": []
		},
		{
			"name": "deletefile",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\":\"updated new commit message via api\",\r\n    \"committer\":{\"name\":\"testOctocat0629\",\"email\":\"octocattest@github.com\"},\r\n    \"sha\":\"{{shavalue_updated}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/contents/{{filename_updated}}",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"contents",
						"{{filename_updated}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "listrepotags",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/tags",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"tags"
					]
				}
			},
			"response": []
		},
		{
			"name": "Createautolinkreferenceinrepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"autolinkid = pm.response.json().id\r",
							"console.log(autolinkid)\r",
							"pm.globals.set(\"autolinkid\",autolinkid)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"key_prefix\":\"test-\",\r\n    \"url_template\":\"https://example.com/TICKET?query=<num>\",\r\n    \"is_alphanumeric\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/autolinks",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"autolinks"
					]
				}
			},
			"response": []
		},
		{
			"name": "getallrepotopics",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/topics",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"topics"
					]
				}
			},
			"response": []
		},
		{
			"name": "getautoreferencelinks",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{gitaccept}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/autolinks",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"autolinks"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteautolink",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/autolinks/{{autolinkid}}",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"autolinks",
						"{{autolinkid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replacrepotopics",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"names\":[\"octocat\",\"atom\",\"electronics\",\"api\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{giturl}}/repos/{{Orggitowner}}/{{gitreponame}}/topics",
					"host": [
						"{{giturl}}"
					],
					"path": [
						"repos",
						"{{Orggitowner}}",
						"{{gitreponame}}",
						"topics"
					]
				}
			},
			"response": []
		}
	]
}